{"version":3,"sources":["components/Tv/TvList/TvList.tsx","components/Tv/Popup/Season/Episode/PopupCard.tsx","components/Tv/Popup/Season/Season.tsx","components/Tv/Popup/Popup.tsx","components/Navbar/Navbar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Tv","show","OpenPopup","className","onClick","id","src","image","medium","alt","original","name","PopupCard","number","Season","season","index","map","episode","Popup","popupShow","cast","data","closePopup","seasons","reduce","groupedSeasons","s","push","premiered","substring","indexOf","summary","replace","c","person","genres","join","status","Nav","handleInput","search","type","placeholder","value","onChange","App","useState","tvs","setTvs","localSelected","localStorage","getItem","JSON","parse","selected","setSelected","localData","setSearch","apikey","setApikey","localId","Number","setId","useEffect","fetch","then","response","json","setItem","newAPI","axios","String","stringify","setPopupShow","setCast","e","target","tv","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uVAqBeA,EAbJ,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,UACjB,OACE,sBAAKC,UAAU,SAASC,QAAS,kBAAMF,EAAUD,EAAKI,KAAtD,UACE,qBAAK,cAAY,YAAYC,IAAKL,EAAKM,MAAON,EAAKM,MAAMC,OAAQ,mBAAoBC,IAAKR,EAAKM,MAAON,EAAKM,MAAMG,SAAU,iCAE3H,qBAAMP,UAAU,OAAhB,SACE,oBAAI,cAAY,WAAhB,SAA4BF,EAAKU,aCG1BC,G,YATG,SAAC,GAAqC,IAApCL,EAAmC,EAAnCA,MAAOM,EAA4B,EAA5BA,OACzB,OACE,sBAAKV,UAAU,cAAf,UACE,qBAAIA,UAAU,aAAd,qBAAoCU,KACpC,qBAAKP,IAAKC,EAAOA,EAAMC,OAAS,sBAAuBC,IAAI,2BCSlDK,G,MAZA,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,MAEvB,OACE,sBAAKb,UAAU,kBAAf,UACE,yCAAYa,KACZ,qBAAKb,UAAU,YAAf,SACGY,EAAOE,KAAI,SAACC,GAAD,OAAkB,cAAC,EAAD,eAAgCA,GAAhBA,EAAQb,cC6C/Cc,EAlDD,SAAC,GAAoD,IAAnDC,EAAkD,EAAlDA,UAAWC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,WAE7BC,EAAUF,EAAKG,QAAO,SAACC,EAAqBC,EAAQX,GAC1D,IAAMD,EAASY,EAAEZ,OAGjB,OAF6B,MAA1BW,EAAeX,KAAiBW,EAAeX,GAAU,IAC5DW,EAAeX,GAAQa,KAAKD,GACrBD,IACN,IAEH,OACE,qBAAKvB,UAAU,QAAf,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,SAAf,SACE,qBAAK,cAAY,YAAYG,IAAKc,EAAUb,MAAOa,EAAUb,MAAMC,OAAQ,OAAQC,IAAI,OAGzF,sBAAKN,UAAU,cAAf,UACE,sBAAK,cAAY,YAAYA,UAAU,QAAvC,UACE,+BAAKiB,GAAaA,EAAUT,KAA5B,KAAoCS,EAAUS,WAAaT,EAAUS,UAAUC,UAAU,EAAGV,EAAUS,UAAUE,QAAQ,MAAxH,OAEA,qBAAK,cAAY,cAAc5B,UAAU,cAAzC,SACE,wBAAQC,QAASmB,EAAjB,oBAGJ,mBAAG,cAAY,cAAf,SAA8BH,EAAUY,SAAWZ,EAAUY,QAAQC,QAAQ,kBAAmB,MAChG,sBAAK,cAAY,WAAW9B,UAAU,OAAtC,UACE,uCACA,4BAAIkB,GAAQA,EAAKJ,KAAI,SAACiB,GAAY,OAAOA,EAAEC,OAAOxB,KAAO,aAE3D,sBAAK,cAAY,YAAYR,UAAU,QAAvC,UACE,yCACA,4BAAIiB,EAAUgB,QAAUhB,EAAUgB,OAAOC,KAAK,WAEhD,sBAAK,cAAY,aAAalC,UAAU,SAAxC,UACE,yCACA,4BAAIiB,GAAaA,EAAUkB,kBAI9Bd,EAAQP,KAAI,SAACF,EAAaC,GACzB,MAAQ,CACR,cAAC,EAAD,CAAQA,MAAOA,EAAmBD,OAAQA,GAAfC,aCvBxBuB,G,MApBH,SAAC,GAAiD,IAAhDC,EAA+C,EAA/CA,YAAaC,EAAkC,EAAlCA,OAAQlB,EAA0B,EAA1BA,WACjC,OACA,qCACE,qBAAK,cAAY,cAAcpB,UAAU,cAAzC,SACI,gDAGJ,sBAAK,cAAY,SAASA,UAAU,SAApC,UACI,qBAAK,cAAY,QAAQA,UAAU,QAAnC,SACE,6CAGF,qBAAK,cAAY,SAASA,UAAU,SAApC,SACE,uBAAO,cAAY,QAAQuC,KAAK,OAAOC,YAAY,yBAAyBC,MAAOH,EAAQtC,UAAU,YAAY0C,SAAUL,EAAapC,QAASmB,c,iBCyF5IuB,MAxGf,WAGE,MAAsBC,mBAAgB,IAAtC,mBAAOC,EAAP,KAAYC,EAAZ,KAEA,EAAgCF,oBAAS,WACvC,IAAMG,EAAgBC,aAAaC,QAAQ,YAC3C,OAAOF,EAAeG,KAAKC,MAAMJ,GAAiB,MAFpD,mBAAOK,EAAP,KAAiBC,EAAjB,KAKA,EAA4BT,oBAAS,WACnC,IAAMU,EAAYN,aAAaC,QAAQ,UACvC,OAAOK,GAAwB,MAFjC,mBAAOhB,EAAP,KAAeiB,EAAf,KAKA,EAA4BX,oBAAiB,WAE3C,OAAON,EADa,yCAA2CA,EACjC,gDAFhC,mBAAOkB,EAAP,KAAeC,EAAf,KAKA,EAAoBb,oBAAS,WAC3B,IAAMc,EAAUV,aAAaC,QAAQ,MACrC,OAAOS,EAASC,OAAOD,GAAW,KAFpC,mBAAOxD,EAAP,KAAW0D,EAAX,KAMCC,qBAAU,WACTC,MAAMN,GACLO,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAA5C,GACJ2B,EAAO3B,QAER,CAACqC,IASJK,qBAAU,WACRb,aAAakB,QAAQ,SAAU5B,KAC9B,CAACA,IAKJ,IAAMvC,EAAY,SAACG,GACjB,IAAIiE,EAAS,gCAAkCjE,EAAK,YACpD0D,EAAM1D,GACNkE,IAAMD,GACLJ,MAAK,YAAa,IAAX5C,EAAU,EAAVA,KACNkC,EAAYlC,OAIhB0C,qBAAU,WACRb,aAAakB,QAAQ,KAAMG,OAAOnE,MACjC,CAACA,IACJ2D,qBAAU,WACRb,aAAakB,QAAQ,WAAYhB,KAAKoB,UAAUlB,MAC/C,CAACA,IAEJ,IAAMhC,EAAa,WACjBiC,EAAY,IACZO,EAAM,IAIR,EAAkChB,mBAAgB,IAAlD,mBAAO3B,EAAP,KAAkBsD,EAAlB,KACA,EAAwB3B,mBAAgB,IAAxC,mBAAO1B,EAAP,KAAasD,EAAb,KAoBA,OAlBAX,qBAAU,WACRC,MAAM,gCAAkCO,OAAOnE,IAC9C6D,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAA5C,GACJoD,EAAapD,QAEd,CAACjB,IAGJ2D,qBAAU,WACRC,MAAM,gCAAiCO,OAAOnE,GAAM,SACnD6D,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAA5C,GACJqD,EAAQrD,QAET,CAACjB,IAIF,sBAAKF,UAAU,UAAf,UACE,cAAC,EAAD,CAAQqC,YAzDQ,SAACoC,GACnBlB,EAAUkB,EAAEC,OAAOjC,OACnBgB,EAAU,yCAA2CgB,EAAEC,OAAOjC,QAuD1BH,OAAQA,EAAQlB,WAAYA,IAC9D,qBAAKpB,UAAU,WAAf,SACG6C,GAAOA,EAAI/B,KAAI,SAAC6D,GAAD,OAChB,cAAC,EAAD,2BAAuCA,GAAvC,IAA2C5E,UAAWA,IAA7C4E,EAAGzE,GAAIyE,EAAGzE,GAAIyE,EAAG7E,KAAKI,WAG/BkD,EAASwB,QAAU,cAAC,EAAD,CAAO3D,UAAWA,EAAWC,KAAMA,EAAMC,KAAMiC,EAAUhC,WAAYA,QC5FjFyD,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6e7fb07c.chunk.js","sourcesContent":["import React from 'react'\nimport './TvList.css'\n\ninterface TvProps {\n  show: any;\n  OpenPopup(id:number): void;\n}\n\nconst Tv = ({show, OpenPopup}: TvProps) => {\n  return (\n    <div className=\"tvCard\" onClick={() => OpenPopup(show.id)}>\n      <img data-testid=\"showImage\" src={show.image? show.image.medium: \"loading image...\"} alt={show.image? show.image.original: \"no image currently available\"} />\n\n      <div  className=\"name\">\n        <h3 data-testid=\"showName\">{show.name}</h3>\n      </div>\n      \n    </div>\n  )\n}\n\nexport default Tv\n","import React from 'react'\nimport './PopupCard.css'\n\ninterface PopupCardProps{\n  image: any;\n  number: number;\n}\n\nconst PopupCard = ({image, number}: PopupCardProps) => {\n  return (\n    <div className=\"episodeCard\">\n      <h4 className=\"episodeNum\">Episode {number}</h4>\n      <img src={image? image.medium : \"image not available\"} alt=\"episode thumbnail\" />\n    </div>\n  )\n}\n\nexport default PopupCard\n","import React from 'react'\nimport PopupCard from './Episode/PopupCard'\nimport \"./Season.css\"\n\ninterface SeasonProp{\n  season: any;\n  index: number;\n}\n\nconst Season = ({season, index, }: SeasonProp) => {\n\n  return (\n    <div className=\"seasonContainer\">\n      <h2>Season {index}</h2>\n      <div className=\"seasonBox\">\n        {season.map((episode: any) => <PopupCard key={episode.id} {...episode}/>)}\n      </div>\n    </div>\n  )\n}\n\nexport default Season\n","import React from 'react'\nimport './Popup.css'\nimport Season from './Season/Season'\n\ninterface PopupProps{\n  popupShow: any;\n  cast?: any;\n  data: any;\n  closePopup?(): void;\n}\nconst Popup = ({popupShow, cast, data, closePopup}:PopupProps) => {\n\n    const seasons = data.reduce((groupedSeasons: any, s: any, index:number) => {\n    const season = s.season;\n    if(groupedSeasons[season] == null) groupedSeasons[season] = []\n    groupedSeasons[season].push(s)\n    return groupedSeasons\n  }, [])\n\n  return (\n    <div className=\"popup\">\n      <div className=\"popupPage\">\n        <div className=\"showInformation\">\n          <div className=\"poster\">\n            <img data-testid=\"showImage\" src={popupShow.image? popupShow.image.medium: \"none\"} alt=\"\" />\n          </div>\n\n          <div className=\"information\">\n            <div data-testid=\"showTitle\" className=\"title\">\n              <h1>{popupShow && popupShow.name} ({popupShow.premiered && popupShow.premiered.substring(0, popupShow.premiered.indexOf('-'))})</h1>\n\n              <div data-testid=\"closeButton\" className=\"closeButton\">\n                <button onClick={closePopup}>X</button>\n              </div>\n            </div>\n            <p data-testid=\"showSummary\">{popupShow.summary && popupShow.summary.replace(/<\\/?[^>]+(>|$)/g, \"\")}</p>\n            <div data-testid=\"showCast\" className=\"cast\">\n              <h3 >Cast:</h3>\n              <p>{cast && cast.map((c: any) => {return c.person.name + \", \"})}</p>\n            </div>\n            <div data-testid=\"showGenre\" className=\"genre\">\n              <h3>Genres:</h3>\n              <p>{popupShow.genres && popupShow.genres.join(', ')}</p>\n            </div>\n            <div data-testid=\"showStatus\" className=\"status\">\n              <h3>Status:</h3> \n              <p>{popupShow && popupShow.status}</p>\n            </div>      \n          </div>\n        </div>    \n          {seasons.map((season: any, index:number) => {\n            return ([\n            <Season index={index} key={index} season={season} />\n            ])\n          })} \n      </div>\n    </div>\n  )\n}\n\nexport default Popup\n","import React from 'react'\nimport './Navbar.css'\n\ninterface NavProps {\n  handleInput?(e: any): any;\n  search?: string;\n  closePopup?(): any;\n}\n\nconst Nav = ({handleInput, search, closePopup}: NavProps) => {\n  return (\n  <>\n    <div data-testid=\"mediaSearch\" className=\"mediaSearch\">\n        <h3>Media Search</h3>\n    </div>\n\n    <div data-testid=\"navbar\" className=\"navbar\">\n        <div data-testid=\"title\" className=\"title\">\n          <h1>Sav State</h1>\n        </div>\n\n        <div data-testid=\"search\" className=\"search\">\n          <input data-testid=\"input\" type=\"text\" placeholder=\"search for a series...\" value={search} className=\"searchbox\" onChange={handleInput} onClick={closePopup}/>\n        </div>\n    </div>\n  </>  \n  )\n}\n\nexport default Nav\n","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Tv from './components/Tv/TvList/TvList';\nimport Popup from './components/Tv/Popup/Popup';\nimport Navbar from './components/Navbar/Navbar'\nimport axios from 'axios';\n\nfunction App() {\n\n  // States\n  const [tvs, setTvs] = useState<any[]>([]);\n\n  const [selected, setSelected] = useState(()=> {\n    const localSelected = localStorage.getItem('selected');\n    return localSelected? JSON.parse(localSelected) : [];\n  });\n\n  const [search, setSearch] = useState(()=> {\n    const localData = localStorage.getItem('search');\n    return localData ? localData : \"\";\n  });\n\n  const [apikey, setApikey] = useState<string>(()=> {\n    const localSearch = \"https://api.tvmaze.com/search/shows?q=\" + search;\n    return search ? localSearch : \"https://api.tvmaze.com/schedule?country=GB\" \n  });\n\n  const [id, setId] = useState(()=> {\n    const localId = localStorage.getItem('id');\n    return localId? Number(localId) : 1;\n  })\n\n   // Landing page of shows on today in the UK \n   useEffect(() => {\n    fetch(apikey)\n    .then((response) => response.json())\n    .then(data => {\n      setTvs(data)\n    })\n  }, [apikey])\n\n\n  // Search handler\n  const handleInput = (e: any) => {\n    setSearch(e.target.value)\n    setApikey(\"https://api.tvmaze.com/search/shows?q=\" + e.target.value)\n    \n  }\n  useEffect(()=> {\n    localStorage.setItem('search', search)\n  }, [search]);\n\n\n\n  // Popup the Shows' information and episodes FOR UPDATE FOCUS ON LINE 46\n  const OpenPopup = (id: number):void => {\n    let newAPI = \"https://api.tvmaze.com/shows/\" + id + \"/episodes\";\n    setId(id);\n    axios(newAPI)\n    .then(({data}) => {\n      setSelected(data);\n    })\n  }\n  \n  useEffect(()=> {\n    localStorage.setItem('id', String(id))\n  }, [id]);\n  useEffect(()=> {\n    localStorage.setItem('selected', JSON.stringify(selected))\n  }, [selected]);\n\n  const closePopup = () => {\n    setSelected([]);\n    setId(1);\n  }\n\n  // Current information of show in popup\n  const [popupShow, setPopupShow] = useState<any[]>([]); \n  const [cast, setCast] = useState<any[]>([]);\n\n  useEffect(()=> {\n    fetch(\"https://api.tvmaze.com/shows/\" + String(id))\n    .then((response) => response.json())\n    .then(data => {\n      setPopupShow(data)    \n    })\n  }, [id])\n\n  //Cast information in seperate api\n  useEffect(()=> {\n    fetch(\"https://api.tvmaze.com/shows/\"+ String(id) + \"/cast\")\n    .then((response) => response.json())\n    .then(data => {\n      setCast(data)    \n    })\n  }, [id])\n  \n\n  return (\n    <div className=\"landing\">\n      <Navbar handleInput={handleInput} search={search} closePopup={closePopup}/>\n      <div className=\"showList\">\n        {tvs && tvs.map((tv)=> \n        <Tv key={tv.id? tv.id: tv.show.id} {...tv} OpenPopup={OpenPopup}/>\n      )}\n      </div>\n      { selected.length  ? <Popup popupShow={popupShow} cast={cast} data={selected} closePopup={closePopup} /> : false}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}